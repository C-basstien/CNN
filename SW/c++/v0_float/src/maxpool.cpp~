#include <main.hpp>
double*** maxpool(double ***sig,int* sig_size,int stride)
{
    double *** max= new double **[sig_size[0]/stride]();
    for (int i = 0; i < sig_size[0]/stride;i++)
    {
        max[i] = new double *[sig_size[1]/stride]();
        for (int j = 0; j < sig_size[1]/stride;j++)
        {
            max[i][j] = new double[sig_size[2]]();
        }
    }
   cout << sig_size[0]<<sig_size[1] <<sig_size[2]<< endl;
   for (int n = 0; n <sig_size[2];n++)
    {
        for (int i = 0; i <sig_size[0];i+=stride)
        {
            for (int j = 0; j <sig_size[1] ;j+=stride)
            {
                    int ii=i/(stride);
                    int jj=j/(stride);
                    for (int a = 0; a <stride ;a++)
                    {
                        for (int b = 0; b <stride ;b++)
                        {
                            if(sig[i+a][j+b][n]>max[ii][jj][n] ){max[ii][jj][n]=sig[i+a][j+b][n];}
                        }
                    }


            }
        }
    }
    return max;
}
